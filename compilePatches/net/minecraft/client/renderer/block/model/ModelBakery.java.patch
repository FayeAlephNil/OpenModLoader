--- /net/minecraft/client/renderer/block/model
+++ /net/minecraft/client/renderer/block/model
@@ -116,7 +116,7 @@
             for(final ResourceLocation var5 : var1.getBlockstateLocations(var3)) {
                 try {
                     ModelBlockDefinition var6 = this.getModelBlockDefinition(var5);
-                    Map var7 = var1.getVariants(var3);
+                    Map<net.minecraft.block.state.IBlockState, ModelResourceLocation> var7 = var1.getVariants(var3);
                     if(var6.hasMultipartData()) {
                         HashSet var8 = Sets.newHashSet(var7.values());
                         var6.getMultipartData().setStateContainer(var3.getBlockState());
@@ -386,7 +386,7 @@
             }
         }
 
-        for(Entry var11 : this.multipartVariantMap.entrySet()) {
+        for(Entry<ModelBlockDefinition, Collection<ModelResourceLocation>> var11 : this.multipartVariantMap.entrySet()) {
             ModelBlockDefinition var12 = (ModelBlockDefinition)var11.getKey();
             Multipart var4 = var12.getMultipartData();
             String var5 = ((ResourceLocation)Block.REGISTRY.getNameForObject(var4.getStateContainer().getBlock())).toString();
@@ -401,7 +401,7 @@
 
             IBakedModel var13 = var6.makeMultipartModel();
 
-            for(ModelResourceLocation var15 : (Collection)var11.getValue()) {
+            for(ModelResourceLocation var15 : var11.getValue()) {
                 if(!var12.hasVariant(var15.getVariant())) {
                     this.bakedRegistry.putObject(var15, var13);
                 }
@@ -473,7 +473,7 @@
 
     private Set<ResourceLocation> getVariantsTextureLocations() {
         HashSet var1 = Sets.newHashSet();
-        ArrayList var2 = Lists.newArrayList(this.variants.keySet());
+        ArrayList<ModelResourceLocation> var2 = Lists.newArrayList(this.variants.keySet());
         Collections.sort(var2, new Comparator<ModelResourceLocation>() {
             public int compare(ModelResourceLocation var1, ModelResourceLocation var2) {
                 return var1.toString().compareTo(var2.toString());
@@ -622,7 +622,7 @@
     }
 
     private void loadSprites() {
-        final Set var1 = this.getVariantsTextureLocations();
+        final Set<ResourceLocation> var1 = this.getVariantsTextureLocations();
         var1.addAll(this.getItemsTextureLocations());
         var1.remove(TextureMap.LOCATION_MISSING_TEXTURE);
         ITextureMapPopulator var2 = new ITextureMapPopulator() {
